name: package

on:
  push:
    branches:
      - main
      - master
      - prep-0.26.0

# ── permissions needed for both Pages & GHCR ────────────────────────────────────
permissions:
  contents: write   # mkdocs gh-deploy pushes to gh-pages
  packages: write   # allow pushing container images

jobs:
# ── 1. Build & publish the Docker image ────────────────────────────────────────
  container-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # optional: set a semver or date tag; here we use short SHA
      - name: Set output tags
        id: vars
        run: |
          echo "sha_short=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      # log in to ghcr.io
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # build and push
      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          build-args: CUDA_AVAILABLE=${{ vars.CUDA_AVAILABLE || 'false' }}
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.sha_short }}

# ── 2. Your existing MkDocs deploy (unchanged) ─────────────────────────────────
  deploy-docs:
    runs-on: ubuntu-latest
    needs: container-build       # wait for image build to finish
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git credentials
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV

      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: mkdocs-material-

      - run: pip install mkdocs-material mkdocs-awesome-pages-plugin mkdocs-glightbox
      - run: mkdocs gh-deploy --force
